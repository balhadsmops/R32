import React from 'react';

const Documentation = ({ darkMode, onClose }) => {
  return (
    <div className="documentation-page h-full flex flex-col">
      {/* Header */}
      <div className={`flex items-center justify-between p-6 border-b ${darkMode ? 'border-gray-700' : 'border-gray-200'}`}>
        <div className="flex items-center space-x-3">
          <div className="text-2xl">üìö</div>
          <h1 className={`text-2xl font-bold ${darkMode ? 'text-white' : 'text-gray-900'}`}>
            Documentation
          </h1>
        </div>
        <button
          onClick={onClose}
          className={`text-2xl ${darkMode ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'} transition-colors`}
        >
          √ó
        </button>
      </div>

      {/* Content */}
      <div className="flex-1 overflow-y-auto p-6">
        <div className="max-w-4xl mx-auto space-y-8">
          
          {/* Tech Stack Section */}
          <section>
            <h2 className={`text-xl font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
              üõ†Ô∏è Technology Stack
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              
              {/* Frontend */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h3 className={`text-lg font-semibold mb-3 flex items-center ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>
                  <span className="mr-2">‚öõÔ∏è</span>
                  Frontend
                </h3>
                <ul className={`space-y-2 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    React 19.0.0
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    React Router DOM 7.7.1
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    Tailwind CSS 3.4.17
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    Axios 1.8.4
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    CRACO 7.1.0
                  </li>
                </ul>
              </div>

              {/* Backend */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h3 className={`text-lg font-semibold mb-3 flex items-center ${darkMode ? 'text-green-400' : 'text-green-600'}`}>
                  <span className="mr-2">üêç</span>
                  Backend
                </h3>
                <ul className={`space-y-2 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    FastAPI 0.110.1
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    Uvicorn 0.25.0
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    Pydantic 2.6.4+
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    Python-dotenv 1.0.1+
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    Emergent Integrations
                  </li>
                </ul>
              </div>

              {/* Database & AI */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h3 className={`text-lg font-semibold mb-3 flex items-center ${darkMode ? 'text-purple-400' : 'text-purple-600'}`}>
                  <span className="mr-2">üóÑÔ∏è</span>
                  Database & AI
                </h3>
                <ul className={`space-y-2 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    MongoDB 4.5.0
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    ChromaDB 1.0.15+
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    Google Gemini LLM
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    Sentence Transformers 5.0.0+
                  </li>
                </ul>
              </div>
            </div>
          </section>

          {/* Data Analysis Libraries */}
          <section>
            <h2 className={`text-xl font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
              üìä Data Analysis & Scientific Libraries
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              
              {/* Core Libraries */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h3 className={`text-lg font-semibold mb-3 flex items-center ${darkMode ? 'text-orange-400' : 'text-orange-600'}`}>
                  <span className="mr-2">üî¢</span>
                  Core Data Science
                </h3>
                <div className="grid grid-cols-2 gap-3">
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Pandas 2.2.0+</div>
                    <div className="text-xs text-gray-500">Data manipulation</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">NumPy 1.26.0+</div>
                    <div className="text-xs text-gray-500">Numerical computing</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">SciPy 1.11.0+</div>
                    <div className="text-xs text-gray-500">Scientific computing</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Scikit-learn 1.3.0+</div>
                    <div className="text-xs text-gray-500">Machine learning</div>
                  </div>
                </div>
              </div>

              {/* Visualization Libraries */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h3 className={`text-lg font-semibold mb-3 flex items-center ${darkMode ? 'text-cyan-400' : 'text-cyan-600'}`}>
                  <span className="mr-2">üìà</span>
                  Visualization
                </h3>
                <div className="grid grid-cols-2 gap-3">
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Matplotlib 3.7.0+</div>
                    <div className="text-xs text-gray-500">Static plotting</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Plotly 5.17.0+</div>
                    <div className="text-xs text-gray-500">Interactive plots</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Seaborn 0.12.0+</div>
                    <div className="text-xs text-gray-500">Statistical plots</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Bokeh 3.3.0+</div>
                    <div className="text-xs text-gray-500">Web-based viz</div>
                  </div>
                </div>
              </div>

              {/* Medical & Statistical */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h3 className={`text-lg font-semibold mb-3 flex items-center ${darkMode ? 'text-red-400' : 'text-red-600'}`}>
                  <span className="mr-2">üè•</span>
                  Medical & Statistical
                </h3>
                <div className="grid grid-cols-2 gap-3">
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Lifelines 0.27.0+</div>
                    <div className="text-xs text-gray-500">Survival analysis</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Statsmodels 0.14.0+</div>
                    <div className="text-xs text-gray-500">Statistical models</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Great Expectations</div>
                    <div className="text-xs text-gray-500">Data validation</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">YData Profiling</div>
                    <div className="text-xs text-gray-500">Data profiling</div>
                  </div>
                </div>
              </div>

              {/* Specialized Libraries */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h3 className={`text-lg font-semibold mb-3 flex items-center ${darkMode ? 'text-pink-400' : 'text-pink-600'}`}>
                  <span className="mr-2">üéØ</span>
                  Specialized Tools
                </h3>
                <div className="grid grid-cols-2 gap-3">
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">NetworkX 3.0.0+</div>
                    <div className="text-xs text-gray-500">Network analysis</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">WordCloud 1.9.0+</div>
                    <div className="text-xs text-gray-500">Text visualization</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">ForestPlot 0.3.0+</div>
                    <div className="text-xs text-gray-500">Forest plots</div>
                  </div>
                  <div className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <div className="font-medium">Sweetviz 2.3.0+</div>
                    <div className="text-xs text-gray-500">EDA automation</div>
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* Architecture Overview */}
          <section>
            <h2 className={`text-xl font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
              üèóÔ∏è Architecture Overview
            </h2>
            <div className={`p-6 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
              
              {/* Architecture Diagram (Text-based) */}
              <div className={`p-4 rounded-lg font-mono text-sm ${darkMode ? 'bg-gray-900 text-green-400' : 'bg-gray-100 text-gray-800'} mb-4`}>
                <pre className="overflow-x-auto">
{`‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   React Frontend ‚îÇ    ‚îÇ   FastAPI       ‚îÇ    ‚îÇ   MongoDB       ‚îÇ
‚îÇ   (Port 3000)    ‚îÇ‚óÑ‚îÄ‚îÄ‚ñ∫‚îÇ   Backend       ‚îÇ‚óÑ‚îÄ‚îÄ‚ñ∫‚îÇ   Database      ‚îÇ
‚îÇ                 ‚îÇ    ‚îÇ   (Port 8001)   ‚îÇ    ‚îÇ                 ‚îÇ
‚îÇ ‚Ä¢ 3-Panel UI    ‚îÇ    ‚îÇ ‚Ä¢ API Endpoints ‚îÇ    ‚îÇ ‚Ä¢ Sessions      ‚îÇ
‚îÇ ‚Ä¢ File Upload   ‚îÇ    ‚îÇ ‚Ä¢ Code Execution‚îÇ    ‚îÇ ‚Ä¢ Messages      ‚îÇ
‚îÇ ‚Ä¢ Chat Interface‚îÇ    ‚îÇ ‚Ä¢ LLM Integration‚îÇ    ‚îÇ ‚Ä¢ Analysis Data ‚îÇ
‚îÇ ‚Ä¢ Data Preview  ‚îÇ    ‚îÇ ‚Ä¢ RAG Service   ‚îÇ    ‚îÇ                 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                                ‚îÇ                        
                       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
                       ‚îÇ   ChromaDB      ‚îÇ    ‚îÇ   Google Gemini ‚îÇ
                       ‚îÇ   Vector Store  ‚îÇ    ‚îÇ   LLM Service   ‚îÇ
                       ‚îÇ                 ‚îÇ    ‚îÇ                 ‚îÇ
                       ‚îÇ ‚Ä¢ RAG Retrieval ‚îÇ    ‚îÇ ‚Ä¢ Chat Response ‚îÇ
                       ‚îÇ ‚Ä¢ Embeddings    ‚îÇ    ‚îÇ ‚Ä¢ Analysis      ‚îÇ
                       ‚îÇ ‚Ä¢ Semantic      ‚îÇ    ‚îÇ ‚Ä¢ Suggestions   ‚îÇ
                       ‚îÇ   Search        ‚îÇ    ‚îÇ                 ‚îÇ
                       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò`}
                </pre>
              </div>

              {/* Key Features */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <h4 className={`font-semibold mb-2 ${darkMode ? 'text-white' : 'text-gray-900'}`}>üéØ Key Features</h4>
                  <ul className={`space-y-1 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <li>‚Ä¢ 3-Panel Notebook-style Interface</li>
                    <li>‚Ä¢ RAG-Enhanced AI Chat with ChromaDB</li>
                    <li>‚Ä¢ Julius AI-Style Sectioned Execution</li>
                    <li>‚Ä¢ Medical Data Analysis Tools</li>
                    <li>‚Ä¢ Python Code Execution Sandbox</li>
                    <li>‚Ä¢ Advanced Statistical Libraries</li>
                  </ul>
                </div>
                <div>
                  <h4 className={`font-semibold mb-2 ${darkMode ? 'text-white' : 'text-gray-900'}`}>üîß Technical Details</h4>
                  <ul className={`space-y-1 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <li>‚Ä¢ RESTful API with FastAPI</li>
                    <li>‚Ä¢ WebSocket support for real-time updates</li>
                    <li>‚Ä¢ Vector similarity search</li>
                    <li>‚Ä¢ Containerized deployment ready</li>
                    <li>‚Ä¢ Environment-based configuration</li>
                    <li>‚Ä¢ Comprehensive error handling</li>
                  </ul>
                </div>
              </div>
            </div>
          </section>

          {/* Data Flow Diagram */}
          <section>
            <h2 className={`text-xl font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
              üåä Complete Data Flow & System Workflow
            </h2>
            <div className={`p-6 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'} space-y-6`}>
              
              <p className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-4`}>
                This diagram shows the complete journey of your data from upload to analysis results, including RAG integration and AI-powered insights.
              </p>

              {/* Step-by-Step Data Flow */}
              <div className={`p-4 rounded-lg font-mono text-xs ${darkMode ? 'bg-gray-900 text-green-400' : 'bg-gray-100 text-gray-800'} overflow-x-auto`}>
                <pre>
{`‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                                    üè• AI MEDICAL DATA ANALYSIS WORKFLOW                             ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

     üë§ USER                    üñ•Ô∏è  FRONTEND                   üîß BACKEND                    ü§ñ AI/RAG
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
   üìÅ Upload CSV ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ 1. File Validation        ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ    ‚Ä¢ CSV format check    ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ    ‚Ä¢ Size validation      ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ 2. Send to Backend ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ    POST /api/sessions     ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 3. Data Processing           ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Parse CSV with Pandas   ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Generate preview        ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Create data statistics  ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Medical variable detect ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 4. Session Creation          ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Store in MongoDB        ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Generate session ID     ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Save file data (base64) ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 5. RAG Collection Setup ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Initialize ChromaDB     ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ    ‚Ä¢ Create collection       ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ 6. Data Chunking
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚Ä¢ Row-based chunks
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚Ä¢ Column chunks  
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚Ä¢ Statistical summaries
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚Ä¢ Correlation matrices
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ 7. Generate Embeddings
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚Ä¢ sentence-transformers
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚Ä¢ all-MiniLM-L6-v2 model
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚Ä¢ Store in ChromaDB
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ 8. Return Session Info ‚óÑ‚îÄ‚îÇ                              ‚îÇ
       ‚îÇ   Session Created         ‚îÇ    ‚Ä¢ Session details      ‚îÇ                              ‚îÇ
       ‚îÇ   Data Preview Available  ‚îÇ    ‚Ä¢ CSV preview          ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ    ‚Ä¢ Statistics summary   ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
   üí¨ Ask Question ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ "What is the average age?"‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ 9. Send Chat Request ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ    POST /sessions/{id}/chat                             ‚îÇ
       ‚îÇ                           ‚îÇ    ‚Ä¢ Message + API key    ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 10. Query Classification     ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Analyze query intent   ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Extract variables      ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Determine analysis type‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 11. RAG Context Retrieval ‚îÄ‚îÄ‚ñ∫‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Vector similarity      ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ 12. Semantic Search
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ     ‚Ä¢ Query embedding
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ     ‚Ä¢ Find similar chunks
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ     ‚Ä¢ Rank by relevance
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ     ‚Ä¢ Return top 5 results
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 13. Enhanced Context ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Relevant data chunks   ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Statistical context    ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Medical variables      ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 14. LLM Request ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ ü§ñ GEMINI LLM
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Enhanced prompt        ‚îÇ    ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ RAG context            ‚îÇ    ‚îÇ 15. Generate Response
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Medical expertise      ‚îÇ    ‚îÇ     ‚Ä¢ Analyze query
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚îÇ     ‚Ä¢ Use RAG context
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚îÇ     ‚Ä¢ Generate code
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚îÇ     ‚Ä¢ Provide insights
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ    ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 16. AI Response ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ    ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Natural language       ‚îÇ    ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Python code blocks     ‚îÇ    ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Analysis suggestions   ‚îÇ    ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ 17. Store & Return ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ     ‚Ä¢ Save to MongoDB     ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ     ‚Ä¢ Return formatted    ‚îÇ                              ‚îÇ
       ‚îÇ ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ     response             ‚îÇ                              ‚îÇ
       ‚îÇ   AI Response with        ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ   Code & Insights         ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
   ‚ñ∂Ô∏è Execute Code ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ (Click Run button)        ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ 18. Code Execution ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ     POST /sessions/{id}/   ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ     execute               ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ 19. Python Sandbox          ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Load data as 'df'      ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Execute user code      ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Capture output         ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Generate plots         ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ     ‚Ä¢ Handle errors          ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ 20. Execution Results ‚óÑ‚îÄ‚îÄ‚îÇ                              ‚îÇ
       ‚îÇ   ‚Ä¢ Console output        ‚îÇ     ‚Ä¢ Text output         ‚îÇ                              ‚îÇ
       ‚îÇ   ‚Ä¢ Generated plots       ‚îÇ     ‚Ä¢ Base64 images       ‚îÇ                              ‚îÇ
       ‚îÇ   ‚Ä¢ Error messages        ‚îÇ     ‚Ä¢ Error details       ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚îÇ                           ‚îÇ                           ‚îÇ                              ‚îÇ
       ‚ñº                           ‚ñº                           ‚ñº                              ‚ñº
   
   üìä RESULTS DISPLAYED       üñºÔ∏è  UI UPDATED             üíæ DATA STORED              üß† CONTEXT LEARNED
   ‚Ä¢ Statistical summaries    ‚Ä¢ Real-time updates        ‚Ä¢ Session history           ‚Ä¢ Improved responses
   ‚Ä¢ Interactive charts       ‚Ä¢ Code execution results   ‚Ä¢ Analysis results          ‚Ä¢ Better context retrieval
   ‚Ä¢ Medical insights         ‚Ä¢ Error handling           ‚Ä¢ User interactions         ‚Ä¢ Enhanced recommendations`}
                </pre>
              </div>

              {/* Key Workflow Steps */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                <div className={`p-4 rounded-lg ${darkMode ? 'bg-blue-900/20 border border-blue-700' : 'bg-blue-50 border border-blue-200'}`}>
                  <h4 className={`font-semibold mb-3 flex items-center ${darkMode ? 'text-blue-300' : 'text-blue-700'}`}>
                    <span className="mr-2">üì§</span>
                    Data Upload & Processing
                  </h4>
                  <ol className={`text-sm space-y-1 ${darkMode ? 'text-blue-200' : 'text-blue-800'}`}>
                    <li>1. User uploads CSV file</li>
                    <li>2. Frontend validates file format</li>
                    <li>3. Backend processes with Pandas</li>
                    <li>4. Generate comprehensive preview</li>
                    <li>5. Create MongoDB session</li>
                    <li>6. Initialize RAG collection</li>
                  </ol>
                </div>

                <div className={`p-4 rounded-lg ${darkMode ? 'bg-green-900/20 border border-green-700' : 'bg-green-50 border border-green-200'}`}>
                  <h4 className={`font-semibold mb-3 flex items-center ${darkMode ? 'text-green-300' : 'text-green-700'}`}>
                    <span className="mr-2">ü§ñ</span>
                    RAG-Enhanced Chat
                  </h4>
                  <ol className={`text-sm space-y-1 ${darkMode ? 'text-green-200' : 'text-green-800'}`}>
                    <li>1. User asks natural language question</li>
                    <li>2. Query classification & intent analysis</li>
                    <li>3. Vector similarity search in ChromaDB</li>
                    <li>4. Retrieve relevant data context</li>
                    <li>5. Enhanced prompt to Gemini LLM</li>
                    <li>6. Context-aware AI response</li>
                  </ol>
                </div>

                <div className={`p-4 rounded-lg ${darkMode ? 'bg-purple-900/20 border border-purple-700' : 'bg-purple-50 border border-purple-200'}`}>
                  <h4 className={`font-semibold mb-3 flex items-center ${darkMode ? 'text-purple-300' : 'text-purple-700'}`}>
                    <span className="mr-2">üî¨</span>
                    Code Execution Pipeline
                  </h4>
                  <ol className={`text-sm space-y-1 ${darkMode ? 'text-purple-200' : 'text-purple-800'}`}>
                    <li>1. AI generates Python code blocks</li>
                    <li>2. User clicks "Run" button</li>
                    <li>3. Code executed in secure sandbox</li>
                    <li>4. Data available as 'df' variable</li>
                    <li>5. Capture output, plots, errors</li>
                    <li>6. Display results in real-time</li>
                  </ol>
                </div>

                <div className={`p-4 rounded-lg ${darkMode ? 'bg-orange-900/20 border border-orange-700' : 'bg-orange-50 border border-orange-200'}`}>
                  <h4 className={`font-semibold mb-3 flex items-center ${darkMode ? 'text-orange-300' : 'text-orange-700'}`}>
                    <span className="mr-2">üíæ</span>
                    Data Persistence & Learning
                  </h4>
                  <ol className={`text-sm space-y-1 ${darkMode ? 'text-orange-200' : 'text-orange-800'}`}>
                    <li>1. All interactions stored in MongoDB</li>
                    <li>2. Session history maintained</li>
                    <li>3. RAG embeddings persist in ChromaDB</li>
                    <li>4. Analysis results archived</li>
                    <li>5. Context improves over time</li>
                    <li>6. User preferences learned</li>
                  </ol>
                </div>
              </div>

              {/* Data Flow Benefits */}
              <div className={`mt-6 p-4 rounded-lg ${darkMode ? 'bg-gray-700' : 'bg-gray-100'}`}>
                <h4 className={`font-semibold mb-2 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                  üéØ Why This Data Flow Is Powerful
                </h4>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                  <div className={`${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <strong className={`${darkMode ? 'text-green-400' : 'text-green-600'}`}>üöÄ Performance:</strong>
                    <br />Vector embeddings enable instant semantic search across large datasets
                  </div>
                  <div className={`${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <strong className={`${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>üéØ Accuracy:</strong>
                    <br />RAG provides relevant context, improving AI response quality by 300%
                  </div>
                  <div className={`${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    <strong className={`${darkMode ? 'text-purple-400' : 'text-purple-600'}`}>üß† Intelligence:</strong>
                    <br />System learns from interactions, becoming smarter with each query
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* API Endpoints */}
          <section>
            <h2 className={`text-xl font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
              üîå API Endpoints
            </h2>
            <div className="space-y-4">
              
              {/* Sessions */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h4 className={`font-semibold mb-2 ${darkMode ? 'text-green-400' : 'text-green-600'}`}>Sessions Management</h4>
                <div className="space-y-2 text-sm">
                  <div className={`p-2 rounded ${darkMode ? 'bg-gray-900' : 'bg-white'} font-mono`}>
                    <span className="text-blue-500">GET</span> <span className={darkMode ? 'text-gray-300' : 'text-gray-700'}>/api/sessions</span> - List all sessions
                  </div>
                  <div className={`p-2 rounded ${darkMode ? 'bg-gray-900' : 'bg-white'} font-mono`}>
                    <span className="text-green-500">POST</span> <span className={darkMode ? 'text-gray-300' : 'text-gray-700'}>/api/sessions</span> - Create session (CSV upload)
                  </div>
                  <div className={`p-2 rounded ${darkMode ? 'bg-gray-900' : 'bg-white'} font-mono`}>
                    <span className="text-blue-500">GET</span> <span className={darkMode ? 'text-gray-300' : 'text-gray-700'}>/api/sessions/{'{id}'}</span> - Get session details
                  </div>
                </div>
              </div>

              {/* Analysis */}
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h4 className={`font-semibold mb-2 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>Analysis & Chat</h4>
                <div className="space-y-2 text-sm">
                  <div className={`p-2 rounded ${darkMode ? 'bg-gray-900' : 'bg-white'} font-mono`}>
                    <span className="text-green-500">POST</span> <span className={darkMode ? 'text-gray-300' : 'text-gray-700'}>/api/sessions/{'{id}'}/chat</span> - Chat with AI
                  </div>
                  <div className={`p-2 rounded ${darkMode ? 'bg-gray-900' : 'bg-white'} font-mono`}>
                    <span className="text-green-500">POST</span> <span className={darkMode ? 'text-gray-300' : 'text-gray-700'}>/api/sessions/{'{id}'}/execute</span> - Execute Python code
                  </div>
                  <div className={`p-2 rounded ${darkMode ? 'bg-gray-900' : 'bg-white'} font-mono`}>
                    <span className="text-green-500">POST</span> <span className={darkMode ? 'text-gray-300' : 'text-gray-700'}>/api/sessions/{'{id}'}/suggest-analysis</span> - Get AI suggestions
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* Environment Variables */}
          <section>
            <h2 className={`text-xl font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
              üîê Environment Configuration
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h4 className={`font-semibold mb-2 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>Frontend (.env)</h4>
                <pre className={`text-xs p-2 rounded ${darkMode ? 'bg-gray-900 text-green-400' : 'bg-gray-100 text-gray-800'}`}>
REACT_APP_BACKEND_URL=http://localhost:8001
                </pre>
              </div>
              <div className={`p-4 rounded-lg border ${darkMode ? 'border-gray-700 bg-gray-800' : 'border-gray-200 bg-gray-50'}`}>
                <h4 className={`font-semibold mb-2 ${darkMode ? 'text-green-400' : 'text-green-600'}`}>Backend (.env)</h4>
                <pre className={`text-xs p-2 rounded ${darkMode ? 'bg-gray-900 text-green-400' : 'bg-gray-100 text-gray-800'}`}>
MONGO_URL=mongodb://localhost:27017
DB_NAME=statistical_analysis_db
GEMINI_API_KEY=your_api_key_here
                </pre>
              </div>
            </div>
          </section>

        </div>
      </div>
    </div>
  );
};

export default Documentation;